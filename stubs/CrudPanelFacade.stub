<?php

namespace Backpack\CRUD\app\Library\CrudPanel;

use Illuminate\Support\Facades\Facade;

/**
 * CrudPanelFacade stub for PHPStan static analysis
 * 
 * @method static CrudPanel current()
 * @method static CrudPanel getCurrentCrudPanel()
 * @method static void setCurrentCrudPanel(CrudPanel $panel)
 * @method static CrudPanel addField(array|string $field, string $position = 'bottom')
 * @method static CrudPanel modifyField(string $name, array $modifs)
 * @method static CrudPanel removeField(string $name)
 * @method static CrudPanel removeFields(array $names)
 * @method static CrudPanel addColumn(array|string $column)
 * @method static CrudPanel modifyColumn(string $name, array $modifs)
 * @method static CrudPanel removeColumn(string $name)
 * @method static CrudPanel removeColumns(array $names)
 * @method static CrudPanel addFilter(array|string $filter)
 * @method static CrudPanel modifyFilter(string $name, array $modifs)
 * @method static CrudPanel removeFilter(string $name)
 * @method static CrudPanel removeFilters(array $names)
 * @method static CrudPanel addButton(string $stack, string $name, string $type, string $content, string|false $position = false)
 * @method static CrudPanel addButtonFromModelFunction(string $stack, string $name, string $model_function_name, string $position = 'line')
 * @method static CrudPanel addButtonFromView(string $stack, string $name, string $view, string $position = 'line')
 * @method static CrudPanel removeButton(string $name)
 * @method static CrudPanel removeButtonFromStack(string $name, string $stack)
 * @method static CrudPanel removeAllButtons()
 * @method static CrudPanel removeAllButtonsFromStack(string $stack)
 * @method static CrudPanel setModel(string $model_name)
 * @method static string getModel()
 * @method static CrudPanel setRoute(string $route)
 * @method static string getRoute()
 * @method static CrudPanel setEntityNameStrings(string $singular, string $plural)
 * @method static CrudPanel setEntityName(string $singular, string $plural)
 * @method static string getEntity()
 * @method static string getEntityLabel()
 * @method static CrudPanel setHeading(string $heading, string $subheading = null)
 * @method static string getHeading()
 * @method static string getSubheading()
 * @method static CrudPanel setSubheading(string $subheading)
 * @method static CrudPanel enableExportButtons()
 * @method static CrudPanel disableExportButtons()
 * @method static CrudPanel enablePersistentTable()
 * @method static CrudPanel disablePersistentTable()
 * @method static CrudPanel enableResponsiveTable()
 * @method static CrudPanel disableResponsiveTable()
 * @method static CrudPanel setDefaultPageLength(int $number)
 * @method static int getDefaultPageLength()
 * @method static CrudPanel setPageLengthMenu(array $menu)
 * @method static array getPageLengthMenu()
 * @method static CrudPanel enableBulkActions()
 * @method static CrudPanel disableBulkActions()
 * @method static CrudPanel addBulkAction(array $action)
 * @method static CrudPanel removeBulkAction(string $name)
 * @method static CrudPanel removeAllBulkActions()
 * @method static mixed get(string $key)
 * @method static CrudPanel set(string $key, mixed $value)
 * @method static bool has(string $key)
 * @method static CrudPanel allowAccess(string|array $permission)
 * @method static CrudPanel denyAccess(string|array $permission)
 * @method static bool hasAccess(string $permission)
 * @method static CrudPanel setOperation(string $operation_name, array $operation_settings = [])
 * @method static string getOperation()
 * @method static CrudPanel setOperationSetting(string $key, mixed $value)
 * @method static mixed getOperationSetting(string $key)
 * @method static CrudPanel setListView(string $view)
 * @method static string getListView()
 * @method static CrudPanel setCreateView(string $view)
 * @method static string getCreateView()
 * @method static CrudPanel setEditView(string $view)
 * @method static string getEditView()
 * @method static CrudPanel setUpdateView(string $view)
 * @method static string getUpdateView()
 * @method static CrudPanel setShowView(string $view)
 * @method static string getShowView()
 * @method static CrudPanel setReorderView(string $view)
 * @method static string getReorderView()
 * @method static CrudPanel setDetailsRowView(string $view)
 * @method static string getDetailsRowView()
 * @method static CrudPanel query()
 * @method static CrudPanel addClause(string $function, mixed ...$arguments)
 * @method static CrudPanel groupBy(string $column)
 * @method static CrudPanel limit(int $number)
 * @method static CrudPanel take(int $number)
 * @method static CrudPanel skip(int $number)
 * @method static CrudPanel offset(int $number)
 * @method static CrudPanel orderBy(string $column, string $order = 'asc')
 * @method static CrudPanel orderByDesc(string $column)
 * @method static mixed getEntry(int $id)
 * @method static \Illuminate\Pagination\LengthAwarePaginator getEntries()
 * @method static int countAllEntries()
 * @method static mixed createEntry(array $data)
 * @method static mixed updateEntry(int $id, array $data)
 * @method static mixed deleteEntry(int $id)
 * @method static CrudPanel with(string|array $entities)
 * @method static bool isColumnNullable(string $column)
 * @method static array getDbColumnTypes()
 * @method static string getDbColumnType(string $column)
 */
class CrudPanelFacade extends Facade
{
    /**
     * Get the registered name of the component.
     */
    protected static function getFacadeAccessor(): string
    {
        return 'crud';
    }
}